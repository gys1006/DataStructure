package com.atguigu.sparseArray;


// 稀疏数组和二维数组的相互转换
public class SparseArray {
    public static void main(String[] args) {
        int a = 9;  //测试 可以删除
        int chessArr1[][] = new int[11][11];
        chessArr1[1][2] = 1;
        chessArr1[2][3] = 2;
        chessArr1[4][5] = 2;
        System.out.println("原始的二维数组");
        for (int[] ints : chessArr1) {
            for (int anInt : ints) {
//                System.out.printf("%d\t", anInt);
                System.out.printf("%d\t", anInt);
            }
            System.out.println();
        }


//       共有多少行
        System.out.println(chessArr1.length);//打印出来的是行号

//       先遍历二维数组,得到有多少个数值
        int sum = 0;
        for (int i = 0; i < 11; i++) {
            for (int j = 0; j < 11; j++) {
                if (chessArr1[i][j] != 0) {
                    sum++;
                }
            }
        }
        System.out.println(sum);

//        创建稀疏数组
        int parseArr[][] = new int[sum + 1][3];
        parseArr[0][0] = 11;
        parseArr[0][1] = 11;
        parseArr[0][2] = sum;

//      遍历二维数据,将二维数据中的值存到稀疏数组中
        int count = 0;//记录有多少行
        for (int i = 0; i < 11; i++) {
            for (int j = 0; j < 11; j++) {
                if (chessArr1[i][j] != 0) {
                    count++;
                    parseArr[count][0] = i;
                    parseArr[count][1] = j;
                    parseArr[count][2] = chessArr1[i][j];
                }
            }
        }

//        输出稀疏数组
        System.out.println("稀疏数组为:");
        for (int i = 0; i < parseArr.length; i++) {
            System.out.printf("%d\t%d\t%d\t\n", parseArr[i][0], parseArr[i][1], parseArr[i][2]);
        }
        System.out.println();

//        将稀疏数组转换为二维数组
        int chessArr2[][] = new int[parseArr[0][0]][parseArr[0][1]];
//        输出恢复后的二维数组
//        遍历稀疏数组(从第二行开始)
        for (int i = 1; i < parseArr.length; i++) {
            chessArr2[parseArr[i][0]][parseArr[i][1]]=parseArr[i][2];
        }
        
        System.out.println();
        for (int[] ints : chessArr2) {
            for (int anInt : ints) {
                System.out.printf("%d\t",anInt);
            }
            System.out.println();
        }
    }
}
